[
  {
    "key": "ctrl+up",
    "command": "cursorMove",
    "args": {
      "to": "up",
      "by": "line",
      "value": 5
    }
  },
  {
    "key": "ctrl+shift+up",
    "command": "cursorMove",
    "args": {
      "to": "up",
      "by": "line",
      "value": 5,
      "select": true
    }
  },
  {
    "key": "ctrl+down",
    "command": "cursorMove",
    "args": {
      "to": "down",
      "by": "line",
      "value": 5
    }
  },
  {
    "key": "ctrl+shift+down",
    "command": "cursorMove",
    "args": {
      "to": "down",
      "by": "line",
      "value": 5,
      "select": true
    }
  },
  {
    "key": "alt+left",
    "command": "cursorHome",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+right",
    "command": "cursorEnd",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+right",
    "command": "cursorEndSelect",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+left",
    "command": "cursorHomeSelect",
    "when": "editorTextFocus"
  },

  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "ctrl+shift+alt+a",
    "command": "workbench.action.tasks.runTask",
    "args": {
      "task": "ALL: init+run"
    }
  },
  {
    "key": "ctrl+shift+alt+i",
    "command": "workbench.action.tasks.runTask",
    "args": {
      "task": "ALL: init"
    }
  },
  {
    "key": "ctrl+shift+alt+x",
    "command": "workbench.action.tasks.terminate",
    "args": "terminateAll"
  },

  {
    "key": "alt+j",
    "command": "cursorDown",
    "when": "!suggestWidgetVisible"
  },
  {
    "key": "alt+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetVisible"
  },
  {
    "key": "alt+j",
    "command": "cursorDownSelect",
    "when": "inStickySelectionMode"
  },
  {
    "key": "ctrl+alt+j",
    "command": "cursorMove",
    "args": {
      "to": "down",
      "by": "line",
      "value": 5
    }
  },
  {
    "key": "ctrl+alt+j",
    "when": "inStickySelectionMode",
    "command": "cursorMove",
    "args": {
      "to": "down",
      "by": "line",
      "value": 5,
      "select": true
    }
  },

  {
    "key": "alt+k",
    "command": "cursorUp",
    "when": "!suggestWidgetVisible"
  },
  {
    "key": "alt+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetVisible"
  },
  {
    "key": "alt+k",
    "when": "inStickySelectionMode",
    "command": "cursorUpSelect"
  },
  {
    "key": "ctrl+alt+k",
    "command": "cursorMove",
    "args": {
      "to": "up",
      "by": "line",
      "value": 5
    }
  },
  {
    "key": "ctrl+alt+k",
    "when": "inStickySelectionMode",
    "command": "cursorMove",
    "args": {
      "to": "up",
      "by": "line",
      "value": 5,
      "select": true
    }
  },

  {
    "key": "alt+l",
    "command": "cursorRight"
  },
  {
    "key": "alt+l",
    "when": "inStickySelectionMode",
    "command": "cursorRightSelect"
  },
  {
    "key": "ctrl+alt+l",
    "command": "cursorWordRight"
  },
  {
    "key": "ctrl+alt+l",
    "when": "inStickySelectionMode",
    "command": "cursorWordRightSelect"
  },

  {
    "key": "alt+h",
    "command": "cursorLeft",
    "when": "!suggestWidgetVisible"
  },
  {
    "key": "alt+h",
    "when": "inStickySelectionMode",
    "command": "cursorLeftSelect"
  },
  {
    "key": "ctrl+alt+h",
    "command": "cursorWordLeft"
  },
  {
    "key": "ctrl+alt+h",
    "when": "inStickySelectionMode",
    "command": "cursorWordLeftSelect"
  },

  {
    "key": "alt+b",
    "command": "cursorWordLeft",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+b",
    "command": "cursorWordLeftSelect",
    "when": "editorTextFocus && inStickySelectionMode"
  },

  {
    "key": "alt+g",
    "command": "cursorHome",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+g",
    "command": "cursorHomeSelect",
    "when": "editorTextFocus && inStickySelectionMode"
  },

  {
    "key": "alt+n",
    "command": "cursorWordRight",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+n",
    "command": "cursorWordRightSelect",
    "when": "editorTextFocus && inStickySelectionMode"
  },

  {
    "key": "alt+;",
    "command": "cursorEnd",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+;",
    "command": "cursorEndSelect",
    "when": "editorTextFocus && inStickySelectionMode"
  },

  {
    "key": "alt+m",
    "command": "editor.action.goToDeclaration",
    "when": "editorTextFocus"
  },

  {
    "command": "sticky-selection.enterStickySelectionMode",
    "key": "alt+a",
    "when": "editorTextFocus && !inStickySelectionMode"
  },
  {
    "command": "sticky-selection.exitStickySelectionModePreserving",
    "key": "alt+a",
    "when": "editorTextFocus && inStickySelectionMode"
  },
  {
    "key": "alt+u",
    "command": "deleteLeft"
  },
  {
    "key": "alt+ctrl+u",
    "command": "deleteWordLeft"
  },
  {
    "key": "alt+o",
    "command": "deleteRight"
  },
  {
    "key": "alt+ctrl+o",
    "command": "deleteWordRight"
  },
  {
    "key": "alt+i",
    "command": "editor.action.insertLineAfter"
  },
  {
    "key": "ctrl+c",
    "command": "runCommands",
    "args": {
      "commands": [
        "editor.action.clipboardCopyAction",
        "sticky-selection.exitStickySelectionModePreserving"
      ]
    }
  },
  {
    "key": "ctrl+x",
    "command": "runCommands",
    "args": {
      "commands": [
        "editor.action.clipboardCutAction",
        "sticky-selection.exitStickySelectionMode"
      ]
    }
  },
  {
    "key": "tab",
    "command": "acceptSelectedSuggestion",
    "when": "acceptSuggestionOnEnter && suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
  },
  {
    "key": "ctrl+space",
    "command": "runCommands",
    "args": {
      "commands": [
        "editor.action.triggerSuggest",
        "focusSuggestion",
        "editor.action.showHover"
      ]
    },
    "when": "!suggestWidgetVisible"
  },
  {
    "key": "ctrl+space",
    "command": "hideSuggestWidget",
    "when": "suggestWidgetVisible"
  },
  {
    "key": "ctrl+space",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+space",
    "command": "-toggleSuggestionDetails",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  }
]
